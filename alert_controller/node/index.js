
const express = require('express');
const app = express();
const kafka = require('kafka-node');

const Consumer = kafka.Consumer;
const client = new kafka.KafkaClient({ kafkaHost: 'localhost:9092' });
const cors = require('cors');

const consumer = new Consumer(
  client,
 // [{ topic: 'alert5' ,partition: 0, offset: 0 }],
 // { fromOffset: true }
    [{ topic: 'alert5' }],
    { autoCommit: true }

);


// allow cors for the client (UI) domain (here running locally on localhost:4200) to prevent api failure due to cross origin issue
app.use(cors({
  origin: 'http://localhost:4200',
  allowedHeaders: 'Content-Type',
  methods: 'GET,POST'
}));

// Get call to send alert details generated by the producer on topic - example
app.get('/stream/example', (req, res) => {
  consumer.on('message', function (message) {
    const value = JSON.parse(message.value);
    //const data= {id: message.offset, type: value.type, breachType: value.breachType, reason: value.reason, phone: value.phone, email: value.email}
    const data= {id: message.offset, type: value.ALERT_TYPE, breachType: value.BREACH_TYPE, reason: value.BREACH_TYPE}
    res.write(`${JSON.stringify(data)}`);
    res.end()
  });
})

// Create a new Kafka producer to send the data posted from UI to Kafka topic- 'close-alert'
const producer = new kafka.Producer(client);

app.post('/ams/closeAlert', (req,res) => {
  let body = '';
  req.on('data', (chunk) => {
    body += chunk;
  });
  req.on('end', () => {
    const userData = JSON.parse(body);
    res.writeHead(200, { 'Content-Type': 'application/json', message: 'Alert Closed Successfully' });
    // Send a message to a Kafka topic
    const payload = {
      topic: 'close-alert',
      messages: JSON.stringify(userData),
      partition: 0
    };
    producer.send([payload], function(err, data) {
      if (err) {
        console.error(err);
      } else {
        console.log('Message sent:', data);
      }
    });
  });
})

app.listen(3000, () => {
  console.log('Server started on port 3000');
});

